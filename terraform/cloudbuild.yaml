steps:
- id: 'branch name'
  name: 'alpine'
  entrypoint: 'sh'  
  args: 
  - '-c'
  - |
      echo "***********************"
      echo "$_ENV"
      echo "***********************"

#[START tf-init]
- id: 'tf init'
  name: 'hashicorp/terraform:1.4.4'
  entrypoint: 'sh'
  dir: terraform/
  args: 
  - '-c'
  - |
      terraform init \
      -backend-config=bucket=${_PROJECT}-tf-state \
      -backend-config=prefix=${_ENV} 
        echo ""
        echo "*************** TERRAFORM INIT ******************"
        echo "******* At Project: ${_PROJECT} ********"
        echo "******* At environment: ${_ENV} ********"
        echo "*************************************************"

#[END tf-init]

#[START tf-validate]
- id: 'tf validate'
  name: 'hashicorp/terraform:1.4.4'
  entrypoint: 'sh'
  dir: 'terraform/'
  args: 
  - '-c'
  - |
      terraform validate 
#[END tf-validate]

#[START tf-plan]
- id: 'tf plan'
  name: 'hashicorp/terraform:1.4.4'
  dir: 'terraform/'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      terraform plan \
      -var=project=${_PROJECT} \
      -var=location=${_LOCATION} \
      -var=zone=${_ZONE} \
      -var=env=${_ENV} \
      -out terraform.plan
        echo "*************** TERRAFORM PLAN ******************"
        echo "******* At Project: ${_PROJECT} ********"
        echo "******* At environment: ${_ENV} ********"
        echo "*************************************************"

#[END tf-plan]

#[START tf-apply]
- id: 'tf apply'
  name: 'hashicorp/terraform:1.4.4'
  entrypoint: 'sh'
  dir: 'terraform/'
  args: 
  - '-c'
  - |
      terraform apply -auto-approve terraform.plan
        echo "*************** TERRAFORM APPLY ******************"
        echo "******* At Project: ${_PROJECT} ********"
        echo "******* At environment: ${_ENV} ********"
        echo "*************************************************"
#[END tf-apply]